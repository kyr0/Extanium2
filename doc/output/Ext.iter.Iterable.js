Ext.data.JsonP.Ext_iter_Iterable({"extends":null,"enum":null,"html_meta":{},"meta":{},"linenr":1,"inheritable":null,"aliases":{},"singleton":true,"subclasses":[],"component":false,"mixins":[],"inheritdoc":null,"statics":{"cfg":[],"property":[],"css_var":[],"method":[],"event":[],"css_mixin":[]},"files":[{"href":"Iterable.html#Ext-iter-Iterable","filename":"Iterable.js"}],"mixedInto":[],"superclasses":[],"members":{"cfg":[],"property":[],"css_var":[],"method":[{"meta":{},"owner":"Ext.iter.Iterable","name":"count","id":"method-count","tagname":"method"},{"meta":{},"owner":"Ext.iter.Iterable","name":"isIterable","id":"method-isIterable","tagname":"method"},{"meta":{},"owner":"Ext.iter.Iterable","name":"iterate","id":"method-iterate","tagname":"method"}],"event":[],"css_mixin":[]},"alternateClassNames":[],"override":null,"private":null,"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/Iterable.html#Ext-iter-Iterable' target='_blank'>Iterable.js</a></div></pre><div class='doc-contents'><p>Class for working with iterable datatype instances.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-count' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.iter.Iterable'>Ext.iter.Iterable</span><br/><a href='source/Iterable.html#Ext-iter-Iterable-method-count' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.iter.Iterable-method-count' class='name expandable'>count</a>( <span class='pre'>input</span> ) : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a></div><div class='description'><div class='short'>Returns the count (length) of a data structure ...</div><div class='long'><p>Returns the count (length) of a data structure</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>input</span> : Mixed<div class='sub-desc'><p>Arbitrary input data</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-isIterable' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.iter.Iterable'>Ext.iter.Iterable</span><br/><a href='source/Iterable.html#Ext-iter-Iterable-method-isIterable' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.iter.Iterable-method-isIterable' class='name expandable'>isIterable</a>( <span class='pre'>v</span> ) : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></div><div class='description'><div class='short'>Returns true if a given value is iterable (simple spoken: accessible by [$propertyName]) ...</div><div class='long'><p>Returns true if a given value is iterable (simple spoken: accessible by [$propertyName])</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>v</span> : Mixed<div class='sub-desc'><p>Value to check</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-iterate' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.iter.Iterable'>Ext.iter.Iterable</span><br/><a href='source/Iterable.html#Ext-iter-Iterable-method-iterate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.iter.Iterable-method-iterate' class='name expandable'>iterate</a>( <span class='pre'>object, fn, scope</span> )</div><div class='description'><div class='short'>Iterates either the elements in an array, or each of the properties in an object. ...</div><div class='long'><p>Iterates either the elements in an array, or each of the properties in an object.\n<b>Note</b>: If you are only iterating arrays, it is better to call each.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>object</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a><div class='sub-desc'><p>The object or array to be iterated</p>\n</div></li><li><span class='pre'>fn</span> : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a><div class='sub-desc'><p>The function to be called for each iteration.\nThe iteration will stop if the supplied function returns false, or\nall array elements / object properties have been covered. The signature\nvaries depending on the type of object being interated:</p>\n\n<div class=\"mdetail-params\"><ul>\n<li>Arrays : <tt>(Object item, Number index, Array allItems)</tt>\n<div class=\"sub-desc\">\nWhen iterating an array, the supplied function is called with each item.</div></li>\n<li>Objects : <tt>(String key, Object value, Object)</tt>\n<div class=\"sub-desc\">\nWhen iterating an object, the supplied function is called with each key-value pair in\nthe object, and the iterated object</div></li>\n<li>Strings : <tt>(Index key, String value, String)</tt>\n<div class=\"sub-desc\">\nWhen iterating a string, the supplied function is called with each char in\nthe string, and the iterated string</div></li>\n</ul></div>\n\n</div></li><li><span class='pre'>scope</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>The scope (<code>this</code> reference) in which the specified function is executed. Defaults to\nthe <code>object</code> being iterated.</p>\n</div></li></ul></div></div></div></div></div></div></div>","parentMixins":[],"name":"Ext.iter.Iterable","uses":[],"id":"class-Ext.iter.Iterable","tagname":"class","requires":[]});