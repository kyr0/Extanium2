Ext.data.JsonP.Ext_Template({"extends":null,"enum":null,"html_meta":{},"meta":{},"linenr":1,"inheritable":null,"aliases":{},"singleton":false,"subclasses":[],"component":false,"mixins":[],"inheritdoc":null,"statics":{"cfg":[],"property":[],"css_var":[],"method":[],"event":[],"css_mixin":[]},"files":[{"href":"Template.html#Ext-Template","filename":"Template.js"}],"mixedInto":[],"superclasses":[],"members":{"cfg":[],"property":[{"meta":{"private":true},"owner":"Ext.Template","name":"compiled","id":"property-compiled","tagname":"property"},{"meta":{"private":true},"owner":"Ext.Template","name":"content","id":"property-content","tagname":"property"},{"meta":{},"owner":"Ext.Template","name":"re","id":"property-re","tagname":"property"}],"css_var":[],"method":[{"meta":{},"owner":"Ext.Template","name":"constructor","id":"method-constructor","tagname":"method"},{"meta":{"chainable":true},"owner":"Ext.Template","name":"compile","id":"method-compile","tagname":"method"},{"meta":{},"owner":"Ext.Template","name":"render","id":"method-render","tagname":"method"}],"event":[],"css_mixin":[]},"alternateClassNames":[],"override":null,"code_type":"ext_define","private":null,"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/Template.html#Ext-Template' target='_blank'>Template.js</a></div></pre><div class='doc-contents'><p><a href=\"#!/api/Ext.Template\" rel=\"Ext.Template\" class=\"docClass\">Ext.Template</a> can be used in four different ways:</p>\n\n<pre><code>new <a href=\"#!/api/Ext.Template\" rel=\"Ext.Template\" class=\"docClass\">Ext.Template</a>(['lala ', '{lol}']).render({lol: 123})\nnew <a href=\"#!/api/Ext.Template\" rel=\"Ext.Template\" class=\"docClass\">Ext.Template</a>('lala {lol}').render({lol: 123})\nnew <a href=\"#!/api/Ext.Template\" rel=\"Ext.Template\" class=\"docClass\">Ext.Template</a>('lala ', '{lol}').render({lol: 123})\n\n// Compiles the template (instance can be reused -&gt; higher performance when using multiple times)\nnew <a href=\"#!/api/Ext.Template\" rel=\"Ext.Template\" class=\"docClass\">Ext.Template</a>({\n    content: 'lala {lol}', // Array of parts is allowed here too\n    compile: true\n}).render({lol: 123})\n</code></pre>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-compiled' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.Template'>Ext.Template</span><br/><a href='source/Template.html#Ext-Template-property-compiled' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Template-property-compiled' class='name expandable'>compiled</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span><strong class='private signature' >private</strong></div><div class='description'><div class='short'>Internal flag if the template is already compiled ...</div><div class='long'><p>Internal flag if the template is already compiled</p>\n<p>Defaults to: <code>false</code></p></div></div></div><div id='property-content' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.Template'>Ext.Template</span><br/><a href='source/Template.html#Ext-Template-property-content' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Template-property-content' class='name expandable'>content</a><span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span><strong class='private signature' >private</strong></div><div class='description'><div class='short'>Internal content holder ...</div><div class='long'><p>Internal content holder</p>\n<p>Defaults to: <code>''</code></p></div></div></div><div id='property-re' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.Template'>Ext.Template</span><br/><a href='source/Template.html#Ext-Template-property-re' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Template-property-re' class='name expandable'>re</a><span> : <a href=\"#!/api/RegExp\" rel=\"RegExp\" class=\"docClass\">RegExp</a></span></div><div class='description'><div class='short'>The regular expression used to match template variables. ...</div><div class='long'><p>The regular expression used to match template variables.\nDefaults to:</p>\n\n<pre><code>     re : /\\{([\\w-]+)\\}/g\n     </code></pre>\n\n<p>Defaults to: <code>/\\{([\\w\\-]+)\\}/g</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-constructor' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.Template'>Ext.Template</span><br/><a href='source/Template.html#Ext-Template-method-constructor' target='_blank' class='view-source'>view source</a></div><strong class='new-keyword'>new</strong><a href='#!/api/Ext.Template-method-constructor' class='name expandable'>Ext.Template</a>( <span class='pre'>cfg, [parts]</span> ) : <a href=\"#!/api/Ext.Template\" rel=\"Ext.Template\" class=\"docClass\">Ext.Template</a></div><div class='description'><div class='short'>Constructor function ...</div><div class='long'><p>Constructor function</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>cfg</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>|<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>|<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a><div class='sub-desc'><p>Template config Object or tpl String or Array or template parts</p>\n</div></li><li><span class='pre'>parts</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>... (optional)<div class='sub-desc'><p>More String template parts</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.Template\" rel=\"Ext.Template\" class=\"docClass\">Ext.Template</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-compile' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.Template'>Ext.Template</span><br/><a href='source/Template.html#Ext-Template-method-compile' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Template-method-compile' class='name expandable'>compile</a>( <span class='pre'></span> ) : <a href=\"#!/api/Ext.Template\" rel=\"Ext.Template\" class=\"docClass\">Ext.Template</a><strong class='chainable signature' >chainable</strong></div><div class='description'><div class='short'>Compiles the template into an internal function, eliminating the RegEx overhead. ...</div><div class='long'><p>Compiles the template into an internal function, eliminating the RegEx overhead.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.Template\" rel=\"Ext.Template\" class=\"docClass\">Ext.Template</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='method-render' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.Template'>Ext.Template</span><br/><a href='source/Template.html#Ext-Template-method-render' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Template-method-render' class='name expandable'>render</a>( <span class='pre'>values</span> ) : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></div><div class='description'><div class='short'>Returns an content fragment of this template with the specified values applied. ...</div><div class='long'><p>Returns an content fragment of this template with the specified <code>values</code> applied.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>values</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a><div class='sub-desc'><p>The template values. Can be an array if the params are numeric (i.e. <code>{0}</code>)\nor an object (i.e. <code>{foo: 'bar'}</code>).</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span><div class='sub-desc'><p>The content fragment</p>\n</div></li></ul></div></div></div></div></div></div></div>","parentMixins":[],"name":"Ext.Template","uses":[],"id":"class-Ext.Template","tagname":"class","requires":[]});